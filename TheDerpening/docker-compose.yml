
version: '3.8'

volumes:
  dbVolume:
  prometheus:
  loki:
  tempo:
  grafana-data:

services:
  derp-blackbox:
    # https://github.com/prometheus/blackbox_exporter/releases
    image: prom/blackbox-exporter:v0.24.0
    container_name: derp-blackbox
    restart: unless-stopped
    ports:
      - 9115:9115
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./Docker/blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    
  derp-prometheus:
    # https://github.com/prometheus/prometheus/releases
    image: prom/prometheus:v2.50.1
    container_name: derp-prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./Docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    depends_on:
      - derp-blackbox

  derp-loki:
    # https://github.com/grafana/loki/releases
    image: grafana/loki:2.9.5
    container_name: derp-loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - /etc/localtime:/etc/localtime:ro      
      - ./Docker/loki.yml:/etc/loki/local-config.yaml
      - loki:/data/loki
    restart: unless-stopped
    ports:
      - 3100:3100

  derp-tempo:
    # https://github.com/grafana/tempo/releases
    image: grafana/tempo:2.4.0
    container_name: derp-tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./Docker/tempo.yml:/etc/tempo.yaml
      - tempo:/tmp/tempo
    restart: unless-stopped
    ports:
      - 3200:3200  # tempo
      - 4007:4317  # otlp grpc
    depends_on:
      - derp-otel-collector

  derp-grafana:
    image: grafana/grafana:9.4.7
    container_name: derp-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=derpipose
      - GF_SECURITY_ADMIN_PASSWORD=derp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./Docker/grafana/provisioning:/etc/grafana/provisioning #https://grafana.com/docs/grafana/latest/administration/provisioning/
      - grafana-data:/var/lib/grafana
      - ./Docker/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: unless-stopped
    user: root
    ports:
      - 3001:3000
    depends_on:
      - derp-prometheus
      - derp-tempo
      - derp-loki    

  derp-otel-collector:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/releases
    container_name: derp-otel
    hostname: otel
    image: otel/opentelemetry-collector-contrib:0.96.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./Docker/otel.yml:/etc/otel-collector-config.yaml
    restart: unless-stopped
    ports:
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "4317:4317"   # OTLP gRPC receiver
      - "9200:55679"  # zpages
      - 13133:13133   # health check endpoint

  derp-rabbitmq:
    # https://github.com/docker-library/rabbitmq
    image: rabbitmq:3.12-management-alpine
    container_name: derp-rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      # https://devops.stackexchange.com/questions/12092/docker-compose-healthcheck-for-rabbitmq?newreg=614274132fbc4f92a92ba80f6d758a76
      # https://www.rabbitmq.com/monitoring.html#health-checks
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5

  postgres:
    container_name: my_postgres_db
    image: postgres:latest
    environment:
      - POSTGRES_USER=myusername
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydatabase
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      -  dbVolume:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  thederpeningapiimage:
    container_name: "thederpeningapiimage"
    build:
        context: ..
        dockerfile: ./TheDerpeningAPI/Dockerfile
    ports:
        - "7568:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7568/ToDoListItem/health"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  thederpeningimage:
    container_name: "thederpeningimage"
    build:
        context: ..
        dockerfile: ./TheDerpening/Dockerfile
    ports:
        - "7564:8080"




  

  