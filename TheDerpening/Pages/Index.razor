@page "/"
@using TheDerpening.Data.Models;
@inject IConfiguration config
@using TheDerpening.Services;
@inject ApiService apiService
@rendermode InteractiveServerRenderMode

<PageTitle>To Do List</PageTitle>

<h1>Hello there!</h1>

Welcome to your todo list

<EditForm Model="@AddnewItem" OnValidSubmit="@HandleValidSubmit">

    <label for="title" class="form-label">Item</label>
    <InputText id="title" class="form-control"
                @bind-Value="AddnewItem.Title"/>
    <button type="submit" class="btn btn-primary">Add</button>
</EditForm>

@if (ToDos != null) {
    @foreach(var taskdo in ToDos) {
        @if(!taskdo.IsTaskCompleted && bool.Parse(config["toggle"] ?? "true")) {
        
            <div class="d-flex flex-row">

                <input id=@taskdo.Id type="checkbox" onchange="@(() => completeTask(taskdo))" />
                <label for=@taskdo.Id>@taskdo.Title</label>    

            </div>
        }
    }
}


@code{

    private List<TodoListItem>? ToDos{ get; set; }


    public TodoListItem AddnewItem = new();

    protected override async Task OnInitializedAsync() {


        ToDos = await apiService.GetTasks();
        AddnewItem = new TodoListItem();

    }

    private async Task HandleValidSubmit() {
        if (AddnewItem is not null) {
            await apiService.AddItem(AddnewItem);
        } 

        ToDos = await apiService.GetTasks();
    }

    private async Task completeTask(TodoListItem listItem) {
        listItem.IsTaskCompleted = !listItem.IsTaskCompleted;
        await apiService.Update(listItem);
    }


   /* List<TaskDo> taskdos = new List<TaskDo> {
        new TaskDo("code better"),
        new TaskDo("Jonathan wants us to rename things.")
    };

    protected override async Task OnInitializedAsync() {
        await Task.CompletedTask;
    }

    public class TaskDo{
        string desc;
        bool isCompleted;

        public string Description{ get => desc; }
        public bool IsCompleted { get; set; } = false;
        public TaskDo(string desc) {
            this.desc = desc;
        }
    } */
}